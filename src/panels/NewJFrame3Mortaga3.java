/*
* To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package panels;

import Database.Connect;
import Database.Retrieve;
import java.awt.print.PrinterException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import sedra.Colors;

/**
 *
 * @author mohammed
 */
public class NewJFrame3Mortaga3 extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame2
     */
    DefaultTableModel dtm;
    private String recID;
    private String s4;
    String customerName;

    public NewJFrame3Mortaga3(String name, String recID, String customerType, String customerName) throws SQLException {
        initComponents();
        Connection conn = DriverManager.getConnection(Connect.URL, Connect.HOST_NAME, Connect.PASSWORD);
        Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
        Statement stmt2 = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
        this.customerName = customerName;
        ResultSet resultSet = stmt.executeQuery("SELECT itemID,Size,salesQuantity,salesPaid,paymentType FROM Sales where recID='" + recID + "'");
        ResultSet resultSet2 = null;
        this.recID = recID;
        String s0;
        String s1;
        String s2;
        String paymentType;
        naming.setText(name);
        // this.total.setText("Total= " + total);

        dtm = (DefaultTableModel) tableForSpecificDataMortaga3.getModel();
        dtm.setRowCount(0);
        while (resultSet.next()) {
            s0 = resultSet.getString(1);
            s1 = resultSet.getString(2);
            s2 = resultSet.getString(3);
            s4 = resultSet.getString(4);
            paymentType = resultSet.getString(5);
            System.err.println("RecID Cons" + this.recID);

            if (customerType.equalsIgnoreCase("Doctor")) {
                resultSet2 = stmt2.executeQuery("SELECT itemDocPrice FROM Store where itemID='" + s0 + "' AND itemSize='" + s1 + "'");

            } else if (customerType.equalsIgnoreCase("Customer")) {
                resultSet2 = stmt2.executeQuery("SELECT itemCustomerPrice FROM Store where itemID='" + s0 + "' AND itemSize='" + s1 + "'");

            }

            resultSet2.next();
            String s3 = resultSet2.getString(1);
            if (s2.equalsIgnoreCase("0")) {
                continue;
            }
            String s_1 = "0";
            Object o[] = {s0, s1, s2, s_1, s3, paymentType, s4};

            dtm.addRow(o);

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane4 = new javax.swing.JScrollPane();
        tableForSpecificDataMortaga3 = new javax.swing.JTable();
        naming = new javax.swing.JLabel();
        submit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tableForSpecificDataMortaga3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        tableForSpecificDataMortaga3.setForeground(Colors.LABELS_COLOR);
        tableForSpecificDataMortaga3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Size", "Quantity", "Mortaga3", "price/item", "Dsicount", "pay"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableForSpecificDataMortaga3.setRowHeight(40);
        jScrollPane4.setViewportView(tableForSpecificDataMortaga3);

        naming.setText("CustomerName");
        naming.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                namingMousePressed(evt);
            }
        });

        submit.setText("حفظ");
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 883, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(naming)
                                .addGap(0, 778, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(submit, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(naming)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 421, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(submit)
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
        // TODO add your handling code here:
        if (tableForSpecificDataMortaga3.getCellEditor() != null) {
            tableForSpecificDataMortaga3.getCellEditor().stopCellEditing();
        }
        Connection c;
        Statement s = null;
        ResultSet resultSet = null;
        try {
            c = DriverManager.getConnection(Connect.URL, Connect.HOST_NAME, Connect.PASSWORD);
            s = c.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);

        } catch (SQLException ex) {
            Logger.getLogger(NewJFrame3Mortaga3.class.getName()).log(Level.SEVERE, null, ex);
        }
        Retrieve r = new Retrieve();
        System.err.println("recid before for" + recID);
        for (int i = 0; i < dtm.getRowCount(); i++) {
            if (dtm.getValueAt(i, 4) != null) {

                int current = Integer.parseInt((String) dtm.getValueAt(i, 2));
                int mortaga3 = Integer.parseInt((String) dtm.getValueAt(i, 3));
                if (mortaga3 > 0) {
                    if (current - mortaga3 >= 0) {
                        System.err.println("recid in for" + recID);
                        String name = (String) dtm.getValueAt(i, 0);
                        String size = (String) dtm.getValueAt(i, 1);
                        if (dtm.getValueAt(i, 4).toString().trim().length() > 0) {
                            //try {
                            System.err.println("recid in if " + recID);
                            r.updateInvoice(resultSet, Integer.parseInt(recID), current, mortaga3, name, size, customerName);

                       //     s.executeUpdate("UPDATE Sales set salesPaid=" + Float.parseFloat((String) dtm.getValueAt(i, 6)) + ",paymentType="+Double.parseDouble((String) dtm.getValueAt(i, 6))+" WHERE "
                            //           + "itemID='" + dtm.getValueAt(i, 0) + "' AND Size='" + dtm.getValueAt(i, 1) + "' AND recID=" + recID);
                            //  } catch (SQLException ex) {
                            //  Logger.getLogger(NewJFrame3Mortaga3.class.getName()).log(Level.SEVERE, null, ex);
                            //}
                        }

                    } else {
                        JOptionPane.showMessageDialog(null, "Unable to retrieve item " + dtm.getValueAt(i, 0) + " Size " + dtm.getValueAt(i, 1) + " Please Enter valid quantity");
                    }
                }
            }
        }

        JOptionPane.showMessageDialog(this, "Done");
        this.dispose();
    }//GEN-LAST:event_submitActionPerformed

    private void namingMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_namingMousePressed
        try {
            // TODO add your handling code here:

            tableForSpecificDataMortaga3.print();
        } catch (PrinterException ex) {
            Logger.getLogger(NewJFrame3Mortaga3.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_namingMousePressed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel naming;
    private javax.swing.JButton submit;
    public static javax.swing.JTable tableForSpecificDataMortaga3;
    // End of variables declaration//GEN-END:variables
}
